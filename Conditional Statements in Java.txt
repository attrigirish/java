Program: Write a program to calculate the monthly telephone bills as per the following rule: 


Minimum Rs. 200 for upto 100 calls. 
Plus Rs. 0.60 per call for next 50 calls. 
Plus Rs. 0.50 per call for next 50 calls. 
Plus Rs. 0.40 per call for any call beyond 200 calls

Test Cases

Input		Output
180			245
200			255
210			259



if(calls<=100)
{
	amount=200;
}
else if(calls<=150)
{
	amount=200+(calls-100)*.60
}
else if(calls<=200)
{
	amount=230+(calls-150)*.50
}
else
{
	amount=255+(calls-200)*.40;
}





Error : lossy conversion


float a=5.55F;
or
float a=5.55f;


float a=5.55;	//Error


long a=55344442L;
or
long a=54424324l;


long a=432424234;	//Error


Error: Variable might not be initialized.

int a;			//Solution int a=0;

if()
{
}
else
{
	a=10;
}

System.out.println("A = " + a);		//Error : variable not initialized



2. switch-case statement

- Multi Way decision making statement
- Can be used to for int, char, or string value only.
- Are applicable if a condition includes == (Equality) comparision only.


Syntax:

switch(value)
{
	case <exp-1>:
		statement(s);
	case <exp-2>:
		statement(s)
	case <exp-3>:
		statement(s)
	...
	...
	default:
		statement(s)
}


e.g.

int day=3;

top:

switch(day)
{
	case 1:
		S.o.p("Sunday");
		break;
	case 2:
		S.o.p("Monday");
		break;
	...

	default:
		S.o.p("Invalid Day");
}


Write a program to accept an alphabet from the user and check if it is an alphabet or vowel. Use switch-case only.


String ch=input.nextLine();

switch(ch)
{
	case "A":
	case "E":
	case "I":
	case "O":
	case "U":
	case "a":
	case "e":
	case "i":
	case "o":
	case "u":
		S.o.p("Vowel");
		break;
	default:
		S.o.p("Consonent");
}


Conditional Operator

?:

Syntax:

(condition)?statement-X:statement-Y;


statement-X will be executed if condition is true, else statement-Y will be executed.


e.g.


if(a>=0)
{
	S.o.p("Positive");
}
else
{
	S.o.p("Negative");
}


or

System.out.println((a>0)?"Positive":"Negative");

//Computation
discount=(exp>5000)?exp*.20:exp*.10;

//Validation
System.out.println((name.equals("")?"Name is required":"");


Program : In a company an employee is paid as under: 

If his basic salary is less than Rs. 1500, then HRA = 10% of basic salary and DA = 90% of basic salary.

If his salary is either equal to or above Rs. 1500, then HRA = Rs. 500 and DA = 98% of basic salary. 

If the employee's salary is input by the user write a program to find his gross salary.


hra = (basic<1500) ? basic*.10 : 500;
da = (basic<1500) ? basic*.90 : basic*.98;




Shorthand Conditions


?: Conditional Operater (IIF)

if(acno>=10000000 and acno<=99999999):
	print("Valid")
else:
	print("Not Valid")




Syntax:

statement-X if(condition) else statement-Y

or

if(condition):
	statement-X
else:
	statement-Y


E.g.


Write a program to check if a number is odd or even.


num=int(input("Enter Number : "))

if(num%2==0):
	print("Even")
else:
	print("Odd")


or


num=int(input("Enter Number : "))
print("Even" if(num%2==0) else "Odd")



In a company an employee is paid as under: 

If his basic salary is less than Rs. 1500, then HRA = 10% of basic salary and DA = 90% of basic salary.

If his salary is either equal to or above Rs. 1500, then HRA = Rs. 500 and DA = 98% of basic salary. 

If the employee's salary is input by the user write a program to find his gross salary.


basic=float(input("Enter Basic Salary : "))
hra=basic*.10 if(basic<1500) else 500
da=basic*.90 if(basic<1500) else basic*.98
net=basic+hra+da
print(net)



Looping Statements

Looping statements are used to repeatedly execute a given set of statement(s). 


1. for
2. while


Syntax:

for iterator in list:
	statement(s)



for contact in ["Girish","Anil","Pankaj","Ravi"]:
	print(contact, end=" ")


Write a program to calculate sum of the the following elements:

	[11,22,33,44,55]




sum=0
for num in [11,22,33,44,55]:
	sum=sum+num

print("Sum = ", sum)



Write a program to count number of elements which are greater than 50.

	[101,43,23,98,55]


if(num>50):


Write a program to print all even elements from the list.

[34,76,13,77,90,23,47,65,38]



Write a program to print all numbers between 1 and 100.


range(start=0,stop,step=1) : Range function returns a list of iterables from start to stop-1 spaced by step value.	


range(1,11)				[1,2,3,...10]
range(10,0,-1)			[10,9,8,7,..,1]
range(2,21,2)     		[2,4,6,...20]
range(10)				[0,1,2,3,..,9]


for value in range(1,101):
	print(value)



Write programs to print following outputs

1. 			2 4 6 .. 20
2. 			1 2 3 .. N
3. 			N (N-1) (N-2) .. 1
4. 			M (M+1) (M+2) .. N


1.

for value in range(2,21,2):
	print(value)


2. 

n=int(input("Enter Stop Value : "))
for value in range(1,n+1):
	print(value)


3. 

for value in range(n,0,-1):
	print(value)


4. 

for value in range(m,n+1):
	print(value)




Program: Write a program to count all factors of a number.

Input: 24
Output : 8


if(n%value==0):
	count=count+1



Program: Write a program to check if n is a prime no. of not.

(Hint: All numbers have only 2 factors)


n=int(input("Enter a Number : "))
count=0
for value in range(2,n//2+1):
	if(n%value==0):
		count=count+1
		break

if(count==1):
	print("Non Prime")
else:
	print("Prime")




Write a program to calculate following expressions 
(Factorial Problem)

n*(n-1)*(n-2)*..*1



1 2 3 4 5

n (n-1) (n-2) .. 1



fac=1
for value in range(n,0,-1):
	fac=fac*value

print(fac)



n=5

5 4 3 2 1

fac=fac*5
fac=fac*4
fac=fac*3
fac=fac*2
fac=fac*1
































































































